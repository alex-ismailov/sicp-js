/* Упражнение 1.43.
Если f есть численная функция, а n — положительное целое число, то мы можем построить
n-кратное применение f, которое определяется как функция, значение которой в точке x равно
f(f(. . . (f(x)) . . .)). Например, если f есть функция x 7→ x + 1, то n-кратным применением f
будет функция x 7→ x + n. Если f есть операция возведения в квадрат, то n-кратное применение
f есть функция, которая возводит свой аргумент в 2
n
-ю степень. Напишите процедуру, которая
принимает в качестве ввода процедуру, вычисляющую f, и положительное целое n, и возвращает
процедуру, вычисляющую n-кратное применение f. Требуется, чтобы Вашу процедуру можно было
использовать в таких контекстах:
((repeated square 2) 5)
625
Подсказка: может оказаться удобно использовать compose из упражнения 1.42 */

const square = (x) => x * x;

/* ex 1.42 */
const compose = (f, g) => (x) => f(g(x));


const repeated = (fn, count) => (arg) => {
  const iter = (a, c) => (
    c === 0
      ? a
      : iter(fn(a), c - 1)
  );
  return iter(arg, count);
};

const repeated2 = (fn, count) => (
  count > 1
    ? (x) => compose(repeated(fn, count - 1), fn)(x)
    : fn
);

/* testing */
const res = repeated(square, 2)(5);
console.log(res);

const res2 = repeated2(square, 2)(5);
console.log(res2);
